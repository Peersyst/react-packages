"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9948],{9948:e=>{e.exports=JSON.parse('{"container":{"defaultValue":null,"description":"Container to observe, if not provided it observes screen","name":"container","parent":{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"},"declarations":[{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"}],"required":false,"type":{"name":"RefObject<HTMLElement>"}},"offset":{"defaultValue":null,"description":"Observer offset. onScreen will be triggered -offset px before.","name":"offset","parent":{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"},"declarations":[{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"}],"required":false,"type":{"name":"string"}},"onScreen":{"defaultValue":null,"description":"onScreen handler","name":"onScreen","parent":{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"},"declarations":[{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"}],"required":false,"type":{"name":"(onScreen: boolean) => any"}},"children":{"defaultValue":null,"description":"Element that consumes observer state","name":"children","parent":{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"},"declarations":[{"fileName":"react-components/src/OnScreenObserver/OnScreenObserver.types.ts","name":"OnScreenObserverProps"}],"required":true,"type":{"name":"any"}}}')}}]);